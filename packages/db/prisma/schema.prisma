// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Zone {
  BUNGALOWS
  TOWER_A
  TOWER_B
  NONE
}

enum PostStatus {
  CREATED
  REMOVED
  SOLD
}

enum PostCategory {
  CLOTHING_AND_ACCESSORIES
  ELECTRONICS
  ENTERTAINMENT
  HOBBIES
  HOME
}

model User {
  id              String         @id
  username        String
  profileImageUrl String
  posts           Post[]
  conversations   Conversation[]
  postReports     PostReport[]
}

model Post {
  author        User           @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId      String
  category      PostCategory
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  conversations Conversation[]
  description   String         @default("") @db.Text
  id            String         @id @default(cuid())
  images        Image[]
  price         Int
  title         String
  status        PostStatus     @default(value: CREATED)
  zone          Zone           @default(value: NONE)
  reports       PostReport[]

  @@index([authorId])
}

model PostReport {
  id         String @id @default(cuid())
  post       Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     String
  reason     String @db.Text
  reporter   User   @relation(fields: [reporterId], references: [id], onDelete: Cascade)
  reporterId String

  @@index([postId])
}

model Image {
  id          String @id @default(cuid())
  externalKey String @unique
  post        Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId      String
  url         String

  @@index([postId])
}

model Conversation {
  id           String    @id @default(cuid())
  createdAt    DateTime  @default(now())
  messages     Message[]
  participants User[]
  post         Post      @relation(fields: [postId], references: [id])
  postId       String

  @@index([postId])
}

model Message {
  id             String       @id @default(cuid())
  content        String       @db.Text
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  createdAt      DateTime     @default(now())
  from           String
  to             String

  @@index([conversationId])
}
